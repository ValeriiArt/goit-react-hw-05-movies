{"version":3,"file":"static/js/958.951aa251.chunk.js","mappings":"iRAwBA,EApBgB,WACZ,MCDW,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACND,GAAa,GACb,IAAME,EAAU,mCAAG,8GAEQC,EAAAA,EAAAA,IAAkBX,GAF1B,OAELY,EAFK,OAGXR,EAAWQ,GAHA,gDAKXN,EAAS,KAAMO,SACfC,QAAQT,MAAM,KAAMQ,SANT,yBAQXL,GAAa,GARF,4EAAH,qDAWhBE,MAED,CAACV,IAEG,CAACK,MAAAA,EAAOE,UAAAA,EAAWJ,QAAAA,GDtBYY,GAA9BV,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UAAWJ,EAA1B,EAA0BA,QAE1B,OACI,gCACKI,IAAa,SAAC,KAAD,IACbF,IAAS,yBAAMA,KAChB,wBACKF,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACT,2BACI,wBAAKF,KACL,uBAAIE,KACJ,uBAAID,MAHCF,a,yMEXvBI,EAAU,mCAKT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGAEkBC,IAAAA,IAAA,qCAAwCF,IAF1D,uBAEIT,EAFJ,EAEIA,KACCY,EAAYZ,EAAZY,QAHL,kBAIIA,GAJJ,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BR,GAA1B,yFACkBM,IAAAA,IAAA,gBAAmBN,EAAnB,oBAAiCI,IADnD,uBACIT,EADJ,EACIA,KADJ,kBAGIA,GAHJ,kEAMA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA8BT,GAA9B,2FACkBM,IAAAA,IAAA,gBAAmBN,EAAnB,4BAAyCI,IAD3D,uBACIT,EADJ,EACIA,KACCe,EAASf,EAATe,KAFL,kBAGIA,GAHJ,kEAMA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCM,GAAjC,2FACkBM,IAAAA,IAAA,gBAAmBN,EAAnB,4BAAyCI,IAD3D,uBACIT,EADJ,EACIA,KACCY,EAAYZ,EAAZY,QAFL,kBAIIA,GAJJ,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACHf,QAAQgB,IAAID,GADT,SAEkBN,IAAAA,IAAA,gCAAmCF,EAAnC,kBAAoDQ,IAFtE,uBAEIjB,EAFJ,EAEIA,KACCY,EAAYZ,EAAZY,QACRV,QAAQgB,IAAIN,GAJT,kBAKIA,GALJ,kEA9BPD,IAAAA,SAAAA,QAAyB","sources":["pages/Reviews/Reviews.jsx","hooks/useFetchMovieReviews.js","service/fetchAPI.js"],"sourcesContent":["import useFetchMovieReviews from 'hooks/useFetchMovieReviews';\nimport { MutatingDots } from 'react-loader-spinner';\n// import s from './Reviews.module.css'\n\nconst Reviews = () => {\n    const { error, isLoading, reviews } = useFetchMovieReviews();\n\n    return (\n        <>\n            {isLoading && <MutatingDots />} \n            {error && <div>{error}</div>}\n            <ul>\n                {reviews.map(({ id, author, content, created_at }) => (\n                    <li key={id}>\n                        <h3>{author}</h3>\n                        <p>{created_at}</p>\n                        <p>{content}</p>\n                    </li>\n                ))}\n            </ul>\n        </>\n    )\n};\n    \nexport default Reviews;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"service/fetchAPI\";\n\nexport default function useFetchMovieReviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    \n    useEffect(() => {\n        setIsLoading(true)\n        const getReviews = async () => {\n            try {\n                const data = await fetchMovieReviews(movieId);\n                setReviews(data);\n            } catch (error) {\n                setError(error.message)\n                console.error(error.message)\n            } finally {\n                setIsLoading(false)\n            }\n        };\n        getReviews();\n        \n    }, [movieId]);\n    \n    return {error, isLoading, reviews};\n}","import axios from \"axios\";\n\nconst API_KEY = '9247604179ba4f8029cfb34035e24946';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// https://api.themoviedb.org/3/movie/725201/reviews?api_key=9247604179ba4f8029cfb34035e24946\n\nexport async function getTrendingDayMovie() {\n    \n    const {data} = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    const { results } = data;\n    return results;\n};\n\nexport async function fetchMovie(id) { \n    const {data} = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    // console.log(data)\n    return data;\n};\n\nexport async function fetchMovieCast(id) {   \n    const {data} = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    const { cast } = data;\n    return cast;\n};\n\nexport async function fetchMovieReviews(id) {\n    const {data} = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    const { results } = data;\n    // console.log(results)\n    return results;\n};\n\nexport async function fetchMovieSearch(query) {\n    console.log(query);\n    const {data} = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n    const { results } = data;\n    console.log(results)\n    return results;\n};"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","getReviews","fetchMovieReviews","data","message","console","useFetchMovieReviews","map","id","author","content","created_at","API_KEY","getTrendingDayMovie","axios","results","fetchMovie","fetchMovieCast","cast","fetchMovieSearch","query","log"],"sourceRoot":""}